// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as AmountInputField from "./AmountInputField.res.mjs";
import * as JsxRuntime from "react/jsx-runtime";
import * as ExpenseCategoryInput from "./ExpenseCategoryInput.res.mjs";

var t = localStorage;

function saveToLocalStorage(key, value) {
  t.setItem(key, value);
}

function TransactionForm(props) {
  var data = props.data;
  var match = React.useState(function () {
        return "";
      });
  var setTransactionAmount = match[1];
  var tansactionAmount = match[0];
  var handleTransactionAmountChange = function (val) {
    setTransactionAmount(function (param) {
          return val;
        });
  };
  var match$1 = React.useState(function () {
        return "";
      });
  var setTransactionCategory = match$1[1];
  var transcationCategory = match$1[0];
  var handleTransactionCatChange = function (val) {
    setTransactionCategory(function (param) {
          return val;
        });
  };
  var handleSubmitTransaction = function () {
    setTransactionAmount(function (param) {
          return "";
        });
    setTransactionCategory(function (param) {
          return "";
        });
    var localStorageData = t.getItem("transcationsData");
    var newTransactionVal = [{
        transactionCategory: transcationCategory,
        transactionAmount: tansactionAmount,
        timestamp: new Date()
      }];
    console.log(data.income);
    var transactionHistoryData = JSON.parse(Belt_Option.getWithDefault(localStorageData === null ? undefined : Caml_option.some(localStorageData), "[]"));
    console.log(transactionHistoryData);
    var updatedTransactionHistory = Belt_Array.concat(newTransactionVal, transactionHistoryData);
    var updatedTransactionHistoryString = JSON.stringify(updatedTransactionHistory);
    saveToLocalStorage("transcationsData", Belt_Option.getWithDefault(updatedTransactionHistoryString, ""));
  };
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx(ExpenseCategoryInput.make, {
                      value: transcationCategory,
                      onChange: handleTransactionCatChange
                    }),
                JsxRuntime.jsx(AmountInputField.make, {
                      value: tansactionAmount,
                      onChange: handleTransactionAmountChange
                    }),
                JsxRuntime.jsx("button", {
                      children: "Add Transaction",
                      className: "bg-emerald-400 w-full p-2 font-bold  " + (
                        transcationCategory !== "" && tansactionAmount !== "" ? "" : "cursor-not-allowed bg-slate-400"
                      ),
                      disabled: !(transcationCategory !== "" && tansactionAmount !== ""),
                      onClick: (function (param) {
                          handleSubmitTransaction();
                        })
                    })
              ]
            });
}

var make = TransactionForm;

export {
  t ,
  saveToLocalStorage ,
  make ,
}
/* t Not a pure module */
